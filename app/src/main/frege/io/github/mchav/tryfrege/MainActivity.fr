module io.github.mchav.tryfrege.MainActivity where

import froid.content.Context
import froid.content.Intent
import froid.support.v4.app.Fragment
import froid.support.v4.app.FragmentManager
import froid.support.v4.app.FragmentPagerAdapter
import froid.support.v4.app.FragmentTransaction
import froid.support.v7.app.AppCompatActivity
import froid.os.AsyncTask
import froid.os.Bundle
import froid.util.Log
import froid.view.View
import froid.widget.TextView
import froid.support.v4.view.ViewPager

import io.github.mchav.tryfrege.ConsoleFragment as C()
import io.github.mchav.tryfrege.EditorFragment as E()
import io.github.mchav.tryfrege.Net
import io.github.mchav.tryfrege.Utilities

import Control.Concurrent
import Java.Util

native module type AppCompatActivity where {}

onCreate :: MutableIO AppCompatActivity -> Maybe (MutableIO Bundle) -> IO ()
onCreate this bundle = do
    this.setContentView activityMain
    sessionId <- newEmptyMVar :: IO (MVar String)
    forkIO (getSessionID >>= putMVar sessionId)
    fm <- this.getSupportFragmentManager
    actionBar <- this.getSupportActionBar
    actionBar.setLogo tryFregeLogo
    actionBar.setDisplayShowHomeEnabled True
    actionBar.setDisplayUseLogoEnabled True
    viewPager <- asViewPager this.findViewById tryFregePagerId
    tfp <- newTryFregePager fm sessionId viewPager this
    viewPager.setAdapter tfp
    viewPager.setCurrentItem 0

newTryFregePager :: MutableIO FragmentManager ->  MVar String ->
                    MutableIO ViewPager -> MutableIO AppCompatActivity ->
                    STMutable RealWorld FragmentPagerAdapter
newTryFregePager fm sessionId viewPager activity = do
    let delegator = FragmentPagerAdapterDelegator { getItem = Just (getItem sessionId viewPager activity), getCount = Just (\_ -> return 2), getPageTitle = Just (\_ -> getPageTitle) }
    mkFragmentPagerAdapter delegator fm

getItem :: MVar String -> MutableIO ViewPager -> MutableIO AppCompatActivity -> MutableIO FragmentPagerAdapter -> Int -> IOMutable Fragment
getItem sessionId viewPager activity this position =
    case position of
        0 -> (C.newConsoleFragment sessionId) >>= return
        1 -> (E.newEditorFragment sessionId viewPager activity) >>= return

getPageTitle :: Int -> IO CharSequence
getPageTitle position =
    case position of
        0 -> return (CharSequence.fromString "Console")
        1 -> return (CharSequence.fromString "Editor")
