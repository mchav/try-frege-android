/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ » ∀ ∃ ∷ … → ← ﬁ ﬂ ƒ
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.24.100
  from src/main/frege/io/github/mchav/tryfrege/Utilities.fr Do not edit this file!
  Instead, edit the source file and recompile.
*/

package io.github.mchav.tryfrege;

import frege.run7.Func;
import frege.run7.Lazy;
import frege.run7.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import frege.Prelude;
import frege.control.Category;
import frege.control.Concurrent;
import frege.control.Semigroupoid;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;
import froid.Types;
import froid.content.Context;
import froid.content.res.AssetManager;
import froid.view.View;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="src\\main\\frege\\io\\github\\mchav\\tryfrege\\Utilities.fr", time=1539569102540L, jmajor=1,
  jminor=7,
  imps={
    "frege.control.Concurrent", "froid.content.Context", "frege.Prelude", "frege.prelude.PreludeArrays",
    "frege.prelude.PreludeBase", "frege.prelude.PreludeIO", "frege.prelude.PreludeList", "frege.prelude.PreludeMonad",
    "frege.prelude.PreludeText", "frege.java.util.Regex", "froid.Types", "frege.java.Util"
  },
  nmss={
    "Concurrent", "Context", "Prelude", "PreludeArrays", "PreludeBase", "PreludeIO", "PreludeList",
    "PreludeMonad", "PreludeText", "Regexp", "Types", "Util"
  },
  symas={}, symcs={}, symis={},
  symts={
    @Meta.SymT(
      offset=3317, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="URLConnection"), typ=0,
      kind=1, cons={}, lnks={}, funs={}, nativ="java.net.URLConnection"
    ),
    @Meta.SymT(
      offset=4238, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="URLEncoder"), typ=1,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=4296,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="URLEncoder", member="encode"),
          stri="s(ss)", sig=3, nativ="java.net.URLEncoder.encode", depth=2, rkind=33, throwing={10}
        )
      },
      nativ="java.net.URLEncoder"
    ),
    @Meta.SymT(
      offset=3090, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="URL"), typ=4,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=3229,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="URL", member="openConnection"),
          stri="s(s)", sig=6, nativ="openConnection", depth=1, rkind=33, throwing={17}
        ),
        @Meta.SymV(
          offset=3134, name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="URL", member="new"),
          stri="s(s)", sig=7, nativ="new", depth=1, rkind=33, throwing={19}
        )
      },
      nativ="java.net.URL"
    ),
    @Meta.SymT(
      offset=2880, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="SAXException"), typ=8,
      kind=1, cons={}, lnks={}, funs={}, nativ="org.xml.sax.SAXException"
    ),
    @Meta.SymT(
      offset=2935, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="ProtocolException"), typ=9,
      kind=1, cons={}, lnks={}, funs={}, nativ="java.net.ProtocolException"
    ),
    @Meta.SymT(
      offset=2787,
      name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="ParserConfigurationException"), typ=10,
      kind=1, cons={}, lnks={}, funs={}, nativ="javax.xml.parsers.ParserConfigurationException"
    ),
    @Meta.SymT(
      offset=2476, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="Node"), typ=11,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=2588,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Node", member="getTextContent"),
          stri="s(s)", sig=13, nativ="getTextContent", depth=1, rkind=33
        ),
        @Meta.SymV(
          offset=2525,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Node", member="elementNode"),
          stri="s", sig=14, nativ="org.w3c.dom.Node.ELEMENT_NODE", depth=0, rkind=33
        )
      },
      nativ="org.w3c.dom.Node"
    ),
    @Meta.SymT(
      offset=1802, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="NodeList"), typ=15,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=1913,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="NodeList", member="item"),
          stri="s(ss)", sig=17, nativ="item", depth=2, rkind=33
        ),
        @Meta.SymV(
          offset=1859,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="NodeList", member="getLength"),
          stri="s(s)", sig=18, nativ="getLength", depth=1, rkind=33
        )
      },
      nativ="org.w3c.dom.NodeList"
    ),
    @Meta.SymT(
      offset=2995, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="MalformedURLException"),
      typ=19, kind=1, cons={}, lnks={}, funs={}, nativ="java.net.MalformedURLException"
    ),
    @Meta.SymT(
      offset=3371, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection"),
      typ=20, kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=3547,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="setRequestProperty"
          ),
          stri="s(sss)", sig=22, nativ="setRequestProperty", depth=3, rkind=33
        ),
        @Meta.SymV(
          offset=3443,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="setRequestMethod"
          ),
          stri="s(ss)", sig=23, nativ="setRequestMethod", depth=2, rkind=33, throwing={21}
        ),
        @Meta.SymV(
          offset=3902,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="getResponseCode"
          ),
          stri="s(s)", sig=24, nativ="getResponseCode", depth=1, rkind=33, throwing={17}
        ),
        @Meta.SymV(
          offset=3807,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="getInputStream"
          ),
          stri="s(s)", sig=25, nativ="getInputStream", depth=1, rkind=33, throwing={17}
        ),
        @Meta.SymV(
          offset=3710,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="getOutputStream"
          ),
          stri="s(s)", sig=26, nativ="getOutputStream", depth=1, rkind=33, throwing={17}
        ),
        @Meta.SymV(
          offset=4179,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="disconnect"
          ),
          stri="s(s)", sig=27, nativ="disconnect", depth=1, rkind=33
        ),
        @Meta.SymV(
          offset=3990,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="getHeaderField"
          ),
          stri="s(ss)", sig=28, nativ="getHeaderField", depth=2, rkind=33
        ),
        @Meta.SymV(
          offset=4068,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="getHeaderFields"
          ),
          stri="s(s)", sig=29, nativ="getHeaderFields", depth=1, rkind=33, gargs={40}
        ),
        @Meta.SymV(
          offset=3638,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection", member="setDoOutput"
          ),
          stri="s(ss)", sig=31, nativ="setDoOutput", depth=2, rkind=33
        )
      },
      nativ="java.net.HttpURLConnection"
    ),
    @Meta.SymT(
      offset=1986, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="Element"), typ=32,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=2041,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Element", member="normalize"),
          stri="s(s)", sig=34, nativ="normalize", depth=1, rkind=33
        ),
        @Meta.SymV(
          offset=2220,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Element", member="getElementsByTagName"
          ),
          stri="s(ss)", sig=35, nativ="getElementsByTagName", depth=2, rkind=33
        ),
        @Meta.SymV(
          offset=2299,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Element", member="fromNode"),
          stri="s(s)", sig=36, depth=1, rkind=49
        ),
        @Meta.SymV(
          offset=2151,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Element", member="getAttribute"),
          stri="s(ss)", sig=37, nativ="getAttribute", depth=2, rkind=33
        ),
        @Meta.SymV(
          offset=2093,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Element", member="getNodeName"),
          stri="s(s)", sig=38, nativ="getNodeName", depth=1, rkind=33
        )
      },
      nativ="org.w3c.dom.Element"
    ),
    @Meta.SymT(
      offset=1056, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="DocumentBuilderFactory"),
      typ=39, kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=1286,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="DocumentBuilderFactory",
            member="newDocumentBuilder"
          ),
          stri="s(s)", sig=41, nativ="newDocumentBuilder", depth=1, rkind=33, throwing={22}
        ),
        @Meta.SymV(
          offset=1151,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="DocumentBuilderFactory", member="newInstance"
          ),
          stri="s(s)", sig=43, nativ="javax.xml.parsers.DocumentBuilderFactory.newInstance", depth=1,
          rkind=33
        )
      },
      nativ="javax.xml.parsers.DocumentBuilderFactory"
    ),
    @Meta.SymT(
      offset=1588, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="Document"), typ=44,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=1719,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Document", member="getElementsByTagName"
          ),
          stri="s(ss)", sig=46, nativ="getElementsByTagName", depth=2, rkind=33
        ),
        @Meta.SymV(
          offset=1645,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="Document", member="getDocumentElement"
          ),
          stri="s(s)", sig=47, nativ="getDocumentElement", depth=1, rkind=33
        )
      },
      nativ="org.w3c.dom.Document"
    ),
    @Meta.SymT(
      offset=1414, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="DocumentBuilder"), typ=48,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=1491,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="DocumentBuilder", member="parse"),
          stri="s(ss)", sig=51, nativ="parse", depth=2, rkind=33, throwing={64}
        )
      },
      nativ="javax.xml.parsers.DocumentBuilder"
    ),
    @Meta.SymT(
      offset=4753, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialog"), typ=52,
      kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=4948,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialog", member="show"),
          stri="s(s)", sig=54, nativ="show", depth=1, rkind=33
        ),
        @Meta.SymV(
          offset=4881,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialog", member="setMessage"),
          stri="s(ss)", sig=55, nativ="setMessage", depth=2, rkind=33
        ),
        @Meta.SymV(
          offset=4816,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialog", member="setTitle"),
          stri="s(ss)", sig=55, nativ="setTitle", depth=2, rkind=33
        )
      },
      nativ="android.app.AlertDialog"
    ),
    @Meta.SymT(
      offset=4534, name=@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialogBuilder"),
      typ=56, kind=1, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=4681,
          name=@Meta.QName(
            kind=2, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialogBuilder", member="create"
          ),
          stri="s(s)", sig=58, nativ="create", depth=1, rkind=33
        ),
        @Meta.SymV(
          offset=4612,
          name=@Meta.QName(kind=2, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialogBuilder", member="new"),
          stri="s(s)", sig=60, nativ="new", depth=1, rkind=33
        )
      },
      nativ="android.app.AlertDialog.Builder"
    )
  },
  symvs={
    @Meta.SymV(
      offset=262, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="tryFregeLogo"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.mipmap.ic_launcher", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=178, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="tryFregePagerId"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.id.try_frege_pager", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=2644, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="toHttpURLConnection"), stri="s(s)",
      sig=62, nativ="(java.net.HttpURLConnection)", depth=1, rkind=33
    ),
    @Meta.SymV(
      offset=875, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="scrollerId"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.id.scroller", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=4418, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="readMVar"), stri="s(s)",
      sig=64, depth=1, rkind=49
    ),
    @Meta.SymV(
      offset=651, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="inputId"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.id.console_input", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=426, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="fragmentConsole"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.layout.fragment_console", pur=true, depth=0,
      rkind=33
    ),
    @Meta.SymV(
      offset=947, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="fragmentEditor"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.layout.fragment_editor", pur=true, depth=0,
      rkind=33
    ),
    @Meta.SymV(
      offset=583, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="evalButton"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.id.eval", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=515, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="console"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.id.console", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=725, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="compileFab"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.id.compile_fab", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=800, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="codeEditor"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.id.code_editor", pur=true, depth=0, rkind=33
    ),
    @Meta.SymV(
      offset=2391, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="castToElement"), stri="s(s)",
      sig=36, nativ="(org.w3c.dom.Element)", depth=1, rkind=33
    ),
    @Meta.SymV(
      offset=343, name=@Meta.QName(pack="io.github.mchav.tryfrege.Utilities", base="activityMain"), stri="s",
      sig=14, nativ="io.github.mchav.tryfrege.R.layout.activity_main", pur=true, depth=0,
      rkind=33
    )
  },
  symls={},
  taus={
    @Meta.Tau(
      kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="URLConnection")}
    ),
    @Meta.Tau(kind=9),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="URLEncoder")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}),
    @Meta.Tau(kind=0, suba=3, subb=4),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="ST")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="RealWorld")}),
    @Meta.Tau(kind=0, suba=6, subb=7), @Meta.Tau(kind=0, suba=8, subb=5),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.IO", base="UnsupportedEncodingException")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="URL")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeIO", base="Mutable")}),
    @Meta.Tau(kind=0, suba=12, subb=7), @Meta.Tau(kind=0, suba=13, subb=11), @Meta.Tau(kind=0, suba=13, subb=0),
    @Meta.Tau(kind=0, suba=8, subb=15),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.Lang", base="IOException")}),
    @Meta.Tau(kind=0, suba=8, subb=14),
    @Meta.Tau(
      kind=2, suba=0,
      tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="MalformedURLException")}
    ),
    @Meta.Tau(
      kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="SAXException")}
    ),
    @Meta.Tau(
      kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="ProtocolException")}
    ),
    @Meta.Tau(
      kind=2, suba=0,
      tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="ParserConfigurationException")}
    ),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="Node")}),
    @Meta.Tau(kind=0, suba=13, subb=23),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="NodeList")}),
    @Meta.Tau(kind=0, suba=13, subb=26),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Maybe")}),
    @Meta.Tau(kind=0, suba=28, subb=24), @Meta.Tau(kind=0, suba=8, subb=29), @Meta.Tau(kind=0, suba=8, subb=25),
    @Meta.Tau(
      kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="HttpURLConnection")}
    ),
    @Meta.Tau(kind=0, suba=13, subb=32),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="()")}),
    @Meta.Tau(kind=0, suba=8, subb=34),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.IO", base="InputStream")}),
    @Meta.Tau(kind=0, suba=8, subb=36),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.IO", base="OutputStream")}),
    @Meta.Tau(kind=0, suba=8, subb=38), @Meta.Tau(suba=1, tvar="s"),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.Util", base="Map")}),
    @Meta.Tau(kind=0, suba=41, subb=5), @Meta.Tau(kind=0, suba=12, subb=40),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.Util", base="List")}),
    @Meta.Tau(kind=0, suba=44, subb=5), @Meta.Tau(kind=0, suba=43, subb=45), @Meta.Tau(kind=0, suba=42, subb=46),
    @Meta.Tau(kind=0, suba=13, subb=47), @Meta.Tau(kind=0, suba=8, subb=48),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Bool")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="Element")}),
    @Meta.Tau(kind=0, suba=13, subb=51), @Meta.Tau(kind=0, suba=8, subb=27), @Meta.Tau(kind=0, suba=8, subb=52),
    @Meta.Tau(
      kind=2, suba=0,
      tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="DocumentBuilderFactory")}
    ),
    @Meta.Tau(kind=0, suba=13, subb=55),
    @Meta.Tau(
      kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="DocumentBuilder")}
    ),
    @Meta.Tau(kind=0, suba=13, subb=57), @Meta.Tau(kind=0, suba=8, subb=58), @Meta.Tau(kind=0, suba=8, subb=56),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="Document")}),
    @Meta.Tau(kind=0, suba=13, subb=61), @Meta.Tau(kind=0, suba=8, subb=62),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeIO", base="Exception")}),
    @Meta.Tau(
      kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialog")}
    ),
    @Meta.Tau(kind=0, suba=13, subb=65),
    @Meta.Tau(
      kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="io.github.mchav.tryfrege.Utilities", base="AlertDialogBuilder")}
    ),
    @Meta.Tau(kind=0, suba=13, subb=67), @Meta.Tau(kind=0, suba=8, subb=66),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="froid.content.Context", base="Context")}),
    @Meta.Tau(kind=0, suba=13, subb=70), @Meta.Tau(kind=0, suba=8, subb=68),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Either")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="froid.Types", base="ClassCastException")}),
    @Meta.Tau(kind=0, suba=73, subb=74), @Meta.Tau(kind=0, suba=75, subb=33), @Meta.Tau(kind=0, suba=8, subb=76),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.control.Concurrent", base="MVar")}),
    @Meta.Tau(suba=1, tvar="a"), @Meta.Tau(kind=0, suba=78, subb=79), @Meta.Tau(kind=0, suba=8, subb=79)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=0), @Meta.Rho(rhofun=false, rhotau=2), @Meta.Rho(rhofun=false, rhotau=5),
    @Meta.Rho(rhofun=false, rhotau=9), @Meta.Rho(sigma=2, rhotau=3), @Meta.Rho(sigma=2, rhotau=4),
    @Meta.Rho(rhofun=false, rhotau=11), @Meta.Rho(rhofun=false, rhotau=14), @Meta.Rho(rhofun=false, rhotau=16),
    @Meta.Rho(sigma=5, rhotau=8), @Meta.Rho(rhofun=false, rhotau=18), @Meta.Rho(sigma=2, rhotau=10),
    @Meta.Rho(rhofun=false, rhotau=20), @Meta.Rho(rhofun=false, rhotau=21), @Meta.Rho(rhofun=false, rhotau=22),
    @Meta.Rho(rhofun=false, rhotau=23), @Meta.Rho(rhofun=false, rhotau=24), @Meta.Rho(sigma=12, rhotau=3),
    @Meta.Rho(rhofun=false, rhotau=25), @Meta.Rho(rhofun=false, rhotau=26), @Meta.Rho(rhofun=false, rhotau=27),
    @Meta.Rho(rhofun=false, rhotau=30), @Meta.Rho(sigma=14, rhotau=21), @Meta.Rho(sigma=16, rhotau=22),
    @Meta.Rho(rhofun=false, rhotau=31), @Meta.Rho(sigma=16, rhotau=24), @Meta.Rho(rhofun=false, rhotau=19),
    @Meta.Rho(rhofun=false, rhotau=32), @Meta.Rho(rhofun=false, rhotau=33), @Meta.Rho(rhofun=false, rhotau=35),
    @Meta.Rho(sigma=2, rhotau=29), @Meta.Rho(sigma=2, rhotau=30), @Meta.Rho(sigma=21, rhotau=31),
    @Meta.Rho(sigma=21, rhotau=30), @Meta.Rho(sigma=21, rhotau=24), @Meta.Rho(rhofun=false, rhotau=37),
    @Meta.Rho(sigma=21, rhotau=35), @Meta.Rho(rhofun=false, rhotau=39), @Meta.Rho(sigma=21, rhotau=37),
    @Meta.Rho(sigma=21, rhotau=29), @Meta.Rho(sigma=14, rhotau=3), @Meta.Rho(sigma=21, rhotau=40),
    @Meta.Rho(rhofun=false, rhotau=49), @Meta.Rho(sigma=21, rhotau=42), @Meta.Rho(rhofun=false, rhotau=50),
    @Meta.Rho(sigma=30, rhotau=29), @Meta.Rho(sigma=21, rhotau=45), @Meta.Rho(rhofun=false, rhotau=51),
    @Meta.Rho(rhofun=false, rhotau=52), @Meta.Rho(sigma=33, rhotau=29), @Meta.Rho(rhofun=false, rhotau=53),
    @Meta.Rho(sigma=2, rhotau=50), @Meta.Rho(sigma=33, rhotau=51), @Meta.Rho(rhofun=false, rhotau=54),
    @Meta.Rho(sigma=12, rhotau=53), @Meta.Rho(sigma=33, rhotau=4), @Meta.Rho(sigma=33, rhotau=3),
    @Meta.Rho(rhofun=false, rhotau=55), @Meta.Rho(rhofun=false, rhotau=56), @Meta.Rho(rhofun=false, rhotau=59),
    @Meta.Rho(sigma=40, rhotau=59), @Meta.Rho(rhofun=false, rhotau=34), @Meta.Rho(rhofun=false, rhotau=60),
    @Meta.Rho(sigma=42, rhotau=62), @Meta.Rho(rhofun=false, rhotau=61), @Meta.Rho(rhofun=false, rhotau=62),
    @Meta.Rho(sigma=45, rhotau=51), @Meta.Rho(sigma=45, rhotau=53), @Meta.Rho(rhofun=false, rhotau=57),
    @Meta.Rho(rhofun=false, rhotau=58), @Meta.Rho(rhofun=false, rhotau=36), @Meta.Rho(rhofun=false, rhotau=63),
    @Meta.Rho(sigma=50, rhotau=71), @Meta.Rho(sigma=49, rhotau=72), @Meta.Rho(rhofun=false, rhotau=65),
    @Meta.Rho(rhofun=false, rhotau=66), @Meta.Rho(sigma=53, rhotau=29), @Meta.Rho(sigma=53, rhotau=30),
    @Meta.Rho(rhofun=false, rhotau=67), @Meta.Rho(rhofun=false, rhotau=68), @Meta.Rho(rhofun=false, rhotau=69),
    @Meta.Rho(sigma=57, rhotau=80), @Meta.Rho(rhofun=false, rhotau=71), @Meta.Rho(rhofun=false, rhotau=72),
    @Meta.Rho(sigma=59, rhotau=83), @Meta.Rho(rhofun=false, rhotau=15), @Meta.Rho(rhofun=false, rhotau=77),
    @Meta.Rho(sigma=61, rhotau=86), @Meta.Rho(rhofun=false, rhotau=80), @Meta.Rho(rhofun=false, rhotau=81),
    @Meta.Rho(sigma=63, rhotau=89)
  },
  sigmas={
    @Meta.Sigma(rho=0), @Meta.Sigma(rho=1), @Meta.Sigma(rho=2), @Meta.Sigma(rho=5), @Meta.Sigma(rho=6),
    @Meta.Sigma(rho=7), @Meta.Sigma(rho=9), @Meta.Sigma(rho=11), @Meta.Sigma(rho=12), @Meta.Sigma(rho=13),
    @Meta.Sigma(rho=14), @Meta.Sigma(rho=15), @Meta.Sigma(rho=16), @Meta.Sigma(rho=17), @Meta.Sigma(rho=18),
    @Meta.Sigma(rho=19), @Meta.Sigma(rho=20), @Meta.Sigma(rho=23), @Meta.Sigma(rho=25), @Meta.Sigma(rho=26),
    @Meta.Sigma(rho=27), @Meta.Sigma(rho=28), @Meta.Sigma(rho=32), @Meta.Sigma(rho=33), @Meta.Sigma(rho=34),
    @Meta.Sigma(rho=36), @Meta.Sigma(rho=38), @Meta.Sigma(rho=39), @Meta.Sigma(rho=41),
    @Meta.Sigma(bound={"s"}, kinds={1}, rho=43), @Meta.Sigma(rho=44), @Meta.Sigma(rho=46), @Meta.Sigma(rho=47),
    @Meta.Sigma(rho=48), @Meta.Sigma(rho=49), @Meta.Sigma(rho=52), @Meta.Sigma(rho=54), @Meta.Sigma(rho=55),
    @Meta.Sigma(rho=56), @Meta.Sigma(rho=57), @Meta.Sigma(rho=58), @Meta.Sigma(rho=60), @Meta.Sigma(rho=61),
    @Meta.Sigma(rho=63), @Meta.Sigma(rho=64), @Meta.Sigma(rho=65), @Meta.Sigma(rho=66), @Meta.Sigma(rho=67),
    @Meta.Sigma(rho=68), @Meta.Sigma(rho=69), @Meta.Sigma(rho=70), @Meta.Sigma(rho=73), @Meta.Sigma(rho=74),
    @Meta.Sigma(rho=75), @Meta.Sigma(rho=76), @Meta.Sigma(rho=77), @Meta.Sigma(rho=78), @Meta.Sigma(rho=79),
    @Meta.Sigma(rho=81), @Meta.Sigma(rho=82), @Meta.Sigma(rho=84), @Meta.Sigma(rho=85), @Meta.Sigma(rho=87),
    @Meta.Sigma(rho=88), @Meta.Sigma(bound={"a"}, kinds={1}, rho=90)
  },
  exprs={@Meta.Expr()}
)
final public class Utilities  {
  



final public static class TURLEncoder  {
  final public static Func.U<RealWorld, String/*<Character>*/> encode(
    final String/*<Character>*/ arg$1, final String/*<Character>*/ arg$2
  ) {
    return new Func.U.D<RealWorld, String/*<Character>*/>() {
          public Lazy<String/*<Character>*/> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<String/*<Character>*/>lazy(java.net.URLEncoder.encode(arg$1, arg$2));
            }
            catch (java.io.UnsupportedEncodingException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
}
final public static class TURL  {
  final public static Func.U<RealWorld, java.net.URLConnection> openConnection(final java.net.URL arg$1) {
    return new Func.U.D<RealWorld, java.net.URLConnection>() {
          public Lazy<java.net.URLConnection> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<java.net.URLConnection>lazy(arg$1.openConnection());
            }
            catch (java.io.IOException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
  final public static Func.U<RealWorld, java.net.URL> $new(final String/*<Character>*/ arg$1) {
    return new Func.U.D<RealWorld, java.net.URL>() {
          public Lazy<java.net.URL> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<java.net.URL>lazy(new java.net.URL(arg$1));
            }
            catch (java.net.MalformedURLException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
}
final public static class TNode  {
  final public static Func.U<RealWorld, String/*<Character>*/> getTextContent(final org.w3c.dom.Node arg$1) {
    return new Func.U.D<RealWorld, String/*<Character>*/>() {
          public Lazy<String/*<Character>*/> apply(final Lazy<RealWorld> _state) {
            return Thunk.<String/*<Character>*/>lazy(arg$1.getTextContent());
          }
        };
  }
}
final public static class TNodeList  {
  final public static Func.U<RealWorld, PreludeBase.TMaybe<org.w3c.dom.Node>> item(
    final org.w3c.dom.NodeList arg$1, final int arg$2
  ) {
    return new Func.U.D<RealWorld, PreludeBase.TMaybe<org.w3c.dom.Node>>() {
          public Lazy<PreludeBase.TMaybe<org.w3c.dom.Node>> apply(final Lazy<RealWorld> _state) {
            return PreludeBase._toMaybe(arg$1.item(arg$2));
          }
        };
  }
  final public static Func.U<RealWorld, Integer> getLength(final org.w3c.dom.NodeList arg$1) {
    return new Func.U.D<RealWorld, Integer>() {
          public Lazy<Integer> apply(final Lazy<RealWorld> _state) {
            return Thunk.<Integer>lazy(arg$1.getLength());
          }
        };
  }
}
final public static class THttpURLConnection  {
  final public static Func.U<RealWorld, Short> setRequestProperty(
    final java.net.HttpURLConnection arg$1, final String/*<Character>*/ arg$2, final String/*<Character>*/ arg$3
  ) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            arg$1.setRequestProperty(arg$2, arg$3);
            return Thunk.lazyUnit;
          }
        };
  }
  final public static Func.U<RealWorld, Short> setRequestMethod(
    final java.net.HttpURLConnection arg$1, final String/*<Character>*/ arg$2
  ) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            try {
              arg$1.setRequestMethod(arg$2);
              return Thunk.lazyUnit;
            }
            catch (java.net.ProtocolException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
  final public static Func.U<RealWorld, Integer> getResponseCode(final java.net.HttpURLConnection arg$1) {
    return new Func.U.D<RealWorld, Integer>() {
          public Lazy<Integer> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<Integer>lazy(arg$1.getResponseCode());
            }
            catch (java.io.IOException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
  final public static Func.U<RealWorld, java.io.InputStream> getInputStream(final java.net.HttpURLConnection arg$1) {
    return new Func.U.D<RealWorld, java.io.InputStream>() {
          public Lazy<java.io.InputStream> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<java.io.InputStream>lazy(arg$1.getInputStream());
            }
            catch (java.io.IOException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
  final public static Func.U<RealWorld, java.io.OutputStream> getOutputStream(final java.net.HttpURLConnection arg$1) {
    return new Func.U.D<RealWorld, java.io.OutputStream>() {
          public Lazy<java.io.OutputStream> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<java.io.OutputStream>lazy(arg$1.getOutputStream());
            }
            catch (java.io.IOException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
  final public static Func.U<RealWorld, Short> disconnect(final java.net.HttpURLConnection arg$1) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            arg$1.disconnect();
            return Thunk.lazyUnit;
          }
        };
  }
  final public static Func.U<RealWorld, String/*<Character>*/> getHeaderField(
    final java.net.HttpURLConnection arg$1, final int arg$2
  ) {
    return new Func.U.D<RealWorld, String/*<Character>*/>() {
          public Lazy<String/*<Character>*/> apply(final Lazy<RealWorld> _state) {
            return Thunk.<String/*<Character>*/>lazy(arg$1.getHeaderField(arg$2));
          }
        };
  }
  final public static <𝓢> Func.U<
    RealWorld, java.util.Map<String/*<Character>*/, java.util.List<String/*<Character>*/>>
  > getHeaderFields(final java.net.HttpURLConnection arg$1) {
    return new Func.U.D<RealWorld, java.util.Map<String/*<Character>*/, java.util.List<String/*<Character>*/>>>() {
          public Lazy<java.util.Map<String/*<Character>*/, java.util.List<String/*<Character>*/>>> apply(
            final Lazy<RealWorld> _state
          ) {
            return Thunk.<java.util.Map<String/*<Character>*/, java.util.List<String/*<Character>*/>>>lazy(
                      arg$1.<𝓢>getHeaderFields()
                    );
          }
        };
  }
  final public static Func.U<RealWorld, Short> setDoOutput(final java.net.HttpURLConnection arg$1, final boolean arg$2) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            arg$1.setDoOutput(arg$2);
            return Thunk.lazyUnit;
          }
        };
  }
}
final public static class TElement  {
  final public static Func.U<RealWorld, Short> normalize(final org.w3c.dom.Element arg$1) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            arg$1.normalize();
            return Thunk.lazyUnit;
          }
        };
  }
  final public static Func.U<RealWorld, org.w3c.dom.NodeList> getElementsByTagName(
    final org.w3c.dom.Element arg$1, final String/*<Character>*/ arg$2
  ) {
    return new Func.U.D<RealWorld, org.w3c.dom.NodeList>() {
          public Lazy<org.w3c.dom.NodeList> apply(final Lazy<RealWorld> _state) {
            return Thunk.<org.w3c.dom.NodeList>lazy(arg$1.getElementsByTagName(arg$2));
          }
        };
  }
  final public static Func.U<RealWorld, org.w3c.dom.Element> fromNode(final org.w3c.dom.Node arg$1) {
    return Utilities.castToElement(arg$1);
  }
  final public static Func.U<RealWorld, String/*<Character>*/> getAttribute(
    final org.w3c.dom.Element arg$1, final String/*<Character>*/ arg$2
  ) {
    return new Func.U.D<RealWorld, String/*<Character>*/>() {
          public Lazy<String/*<Character>*/> apply(final Lazy<RealWorld> _state) {
            return Thunk.<String/*<Character>*/>lazy(arg$1.getAttribute(arg$2));
          }
        };
  }
  final public static Func.U<RealWorld, String/*<Character>*/> getNodeName(final org.w3c.dom.Element arg$1) {
    return new Func.U.D<RealWorld, String/*<Character>*/>() {
          public Lazy<String/*<Character>*/> apply(final Lazy<RealWorld> _state) {
            return Thunk.<String/*<Character>*/>lazy(arg$1.getNodeName());
          }
        };
  }
}
final public static class TDocumentBuilderFactory  {
  final public static Func.U<RealWorld, javax.xml.parsers.DocumentBuilder> newDocumentBuilder(
    final javax.xml.parsers.DocumentBuilderFactory arg$1
  ) {
    return new Func.U.D<RealWorld, javax.xml.parsers.DocumentBuilder>() {
          public Lazy<javax.xml.parsers.DocumentBuilder> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<javax.xml.parsers.DocumentBuilder>lazy(arg$1.newDocumentBuilder());
            }
            catch (javax.xml.parsers.ParserConfigurationException ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
  final public static Func.U<RealWorld, javax.xml.parsers.DocumentBuilderFactory> newInstance(
    final short arg$1
  ) {
    return new Func.U.D<RealWorld, javax.xml.parsers.DocumentBuilderFactory>() {
          public Lazy<javax.xml.parsers.DocumentBuilderFactory> apply(final Lazy<RealWorld> _state) {
            return Thunk.<javax.xml.parsers.DocumentBuilderFactory>lazy(javax.xml.parsers.DocumentBuilderFactory.newInstance());
          }
        };
  }
}
final public static class TDocument  {
  final public static Func.U<RealWorld, org.w3c.dom.NodeList> getElementsByTagName(
    final org.w3c.dom.Document arg$1, final String/*<Character>*/ arg$2
  ) {
    return new Func.U.D<RealWorld, org.w3c.dom.NodeList>() {
          public Lazy<org.w3c.dom.NodeList> apply(final Lazy<RealWorld> _state) {
            return Thunk.<org.w3c.dom.NodeList>lazy(arg$1.getElementsByTagName(arg$2));
          }
        };
  }
  final public static Func.U<RealWorld, org.w3c.dom.Element> getDocumentElement(final org.w3c.dom.Document arg$1) {
    return new Func.U.D<RealWorld, org.w3c.dom.Element>() {
          public Lazy<org.w3c.dom.Element> apply(final Lazy<RealWorld> _state) {
            return Thunk.<org.w3c.dom.Element>lazy(arg$1.getDocumentElement());
          }
        };
  }
}
final public static class TDocumentBuilder  {
  final public static Func.U<RealWorld, org.w3c.dom.Document> parse(
    final javax.xml.parsers.DocumentBuilder arg$1, final java.io.InputStream arg$2
  ) {
    return new Func.U.D<RealWorld, org.w3c.dom.Document>() {
          public Lazy<org.w3c.dom.Document> apply(final Lazy<RealWorld> _state) {
            try {
              return Thunk.<org.w3c.dom.Document>lazy(arg$1.parse(arg$2));
            }
            catch (java.lang.Exception ex) {
              throw PreludeBase.WrappedCheckedException.wrapIfNeeded(ex);
            }
          }
        };
  }
}
final public static class TAlertDialog  {
  final public static Func.U<RealWorld, Short> show(final android.app.AlertDialog arg$1) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            arg$1.show();
            return Thunk.lazyUnit;
          }
        };
  }
  final public static Func.U<RealWorld, Short> setMessage(
    final android.app.AlertDialog arg$1, final String/*<Character>*/ arg$2
  ) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            arg$1.setMessage(arg$2);
            return Thunk.lazyUnit;
          }
        };
  }
  final public static Func.U<RealWorld, Short> setTitle(
    final android.app.AlertDialog arg$1, final String/*<Character>*/ arg$2
  ) {
    return new Func.U.D<RealWorld, Short>() {
          public Lazy<Short> apply(final Lazy<RealWorld> _state) {
            arg$1.setTitle(arg$2);
            return Thunk.lazyUnit;
          }
        };
  }
}
final public static class TAlertDialogBuilder  {
  final public static Func.U<RealWorld, android.app.AlertDialog> create(final android.app.AlertDialog.Builder arg$1) {
    return new Func.U.D<RealWorld, android.app.AlertDialog>() {
          public Lazy<android.app.AlertDialog> apply(final Lazy<RealWorld> _state) {
            return Thunk.<android.app.AlertDialog>lazy(arg$1.create());
          }
        };
  }
  final public static Func.U<RealWorld, android.app.AlertDialog.Builder> $new(final android.content.Context arg$1) {
    return new Func.U.D<RealWorld, android.app.AlertDialog.Builder>() {
          public Lazy<android.app.AlertDialog.Builder> apply(final Lazy<RealWorld> _state) {
            return Thunk.<android.app.AlertDialog.Builder>lazy(new android.app.AlertDialog.Builder(arg$1));
          }
        };
  }
}
final public static Func.U<
  RealWorld, PreludeBase.TEither<java.lang.ClassCastException, java.net.HttpURLConnection>
> toHttpURLConnection(final java.net.URLConnection arg$1) {
  return new Func.U.D<RealWorld, PreludeBase.TEither<java.lang.ClassCastException, java.net.HttpURLConnection>>() {
        public Lazy<PreludeBase.TEither<java.lang.ClassCastException, java.net.HttpURLConnection>> apply(
          final Lazy<RealWorld> _state
        ) {
          try {
            return PreludeBase.TEither.DRight.<java.lang.ClassCastException, java.net.HttpURLConnection>mk(
                      Thunk.<java.net.HttpURLConnection>lazy((java.net.HttpURLConnection)(arg$1))
                    );
          }
          catch (java.lang.ClassCastException ex) {
            return PreludeBase.TEither.DLeft.<java.lang.ClassCastException, java.net.HttpURLConnection>mk(
                      Thunk.<java.lang.ClassCastException>lazy(ex)
                    );
          }
        }
      };
}
final public static <𝓐> Func.U<RealWorld, 𝓐> readMVar(final java.util.concurrent.BlockingQueue<𝓐> arg$1) {
  final Func.U<RealWorld, 𝓐> v2038$7903 = Concurrent.TMVar.<𝓐>take(arg$1);
  return new Func.U.D<RealWorld, 𝓐>() {
        public Lazy<𝓐> apply(final Lazy<RealWorld> arg$7947) {
          final 𝓐 v2041$7906 = v2038$7903.apply(arg$7947).call();
          final Func.U<RealWorld, Short> v4801$7929 = Concurrent.TMVar.<𝓐>put(arg$1, v2041$7906);
          final short v4804$7931 = (short)v4801$7929.apply(arg$7947).call();
          final Func.U<RealWorld, 𝓐> v4805$7932 = Thunk.<Func.U<RealWorld, 𝓐>>shared(
                new Lazy.D<Func.U<RealWorld, 𝓐>>() {
                  public Func.U<RealWorld, 𝓐> call() {
                    return PreludeMonad.IMonad_ST.<RealWorld, 𝓐>pure(Thunk.<𝓐>lazy(v2041$7906));
                  }
                }
              ).call();
          return Thunk.<𝓐>nested(new Lazy.D<Lazy<𝓐>>() {public Lazy<𝓐> call() {return v4805$7932.apply(arg$7947);}});
        }
      };
}
final public static Func.U<RealWorld, org.w3c.dom.Element> castToElement(final org.w3c.dom.Node arg$1) {
  return new Func.U.D<RealWorld, org.w3c.dom.Element>() {
        public Lazy<org.w3c.dom.Element> apply(final Lazy<RealWorld> _state) {
          return Thunk.<org.w3c.dom.Element>lazy((org.w3c.dom.Element)(arg$1));
        }
      };
}

}
